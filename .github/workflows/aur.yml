name: AUR

on: workflow_dispatch

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: ./

      - name: Prepare artifacts
        run: |
          ls -la .
          mkdir -p src/build/installers
          mv ./repo/* ./src
          mv ./amd64/build/installers/* ./src/build/installers/
          mv ./arm64v8/* ./src/build/installers/
          rm -rf ./repo
          rm -rf ./amd64
          rm -rf ./arm64v8
          ls -la .
          ls -la ./src
          ls -la ./src/build
          ls -la ./src/build/installers
          find ./ -type f -iname "*.sh" -exec chmod +x {} \;
          find ./ -type f -iname "*.pl" -exec chmod +x {} \;
          rm -rf ./src/build/installers/*.deb
          rm -rf ./src/build/installers/*.pacman
          rm -rf ./src/build/installers/*.rpm
          rm -rf ./src/build/installers/*.AppImage
          rm -rf ./src/build/installers/linux*
          ls -la ./src/build/installers/

      - name: Import SSH key
        id: key
        run: |
          echo "Importing SSH ley..."
          echo "${{ secrets.ID_RSA }}" | base64 -d > ~/.ssh/id_rsa
          echo "Updating ~/.ssh/known_hosts..."
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "Step completed"

      - name: Checkout AUR repo
        id: checkout
        run: git clone ssh://aur@aur.archlinux.org/figma-linux.git ./

      - name: Update PKGBUILD
        id: pkgbuild
        run: |
          mkdir new-aur
          cd ./src
          docker build -t 4tqrgqe5yrgfd/figma-linux-docker-image-archlinux -f ./docker/archlinux .
          docker cp $(docker create 4tqrgqe5yrgfd/figma-linux-docker-image-archlinux)://usr/src/figma-linux-aur/. ../new-aur
          cp -rf ../new-aur/PKGBUILD ../aur/
          cp -rf ../new-aur/.SRCINFO ../aur/
          echo ::set-output name=release::$version

      - name: Push to AUR
        id: push
        run: |
          git config --global --add user.name "${{ secrets.USER_NAME }}"
          git config --global --add user.email "${{ secrets.EMAIL }}"
          git add .
          git commit -m "Release v$version"
          git push origin master
