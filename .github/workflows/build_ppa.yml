name: Upload new rev PPA

on:
  workflow_dispatch:
    inputs:
      rev:
        description: 'rev'
        required: true
        default: '1'

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout on latest tag
        run: |
          # git tag
          # git tag | tail -1
          # git checkout $(git tag | tail -1)
          # git status
          chmod +x ./**/*.sh
          chmod +x ./**/*.pl
          perl ./scripts/update_rev_changelog.pl "$(git tag | tail -1 | tr -d 'v')" "${{ github.event.inputs.rev }}"

      - name: Cache src
        id: cache-src
        uses: actions/upload-artifact@v3
        with:
          name: repo
          path: ./*

  build_amd64:
    runs-on: ubuntu-latest
    name: build for amd64
    needs: setup
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: repo
          path: ./

      - name: Setup
        run: |
          chmod +wr . -R
          chmod +x ./**/*.sh
          chmod +x ./**/*.pl

      - name: Build in Docker
        id: build
        run: |
          docker build -t figma-linux-artefacts -f "./docker/Build_artefacts_local" --build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g) .
          mkdir -p ./build/installers
          docker cp $(docker create figma-linux-artefacts:latest)://usr/src/figma-linux/build/installers/. ./build/installers

      - name: Cache amd64 artifacts
        id: cache-amd64-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: amd64
          path: build/installers/*

  upload_ppa_amd64:
    name: Upload to Launchpad PPA
    runs-on: ubuntu-latest
    needs: build_amd64
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: ./

      - name: Import keys
        run: |
          mkdir -p ./build/installers
          ls -la .
          mv ./repo/* ./
          mv ./amd64/* ./build/installers
          rm -rf ./repo
          rm -rf ./amd64
          ls -la .
          chmod +x ./**/*.sh
          chmod +x ./**/*.pl
          ls -la ./scripts
          ls -la ./build
          ls -la ./build/installers
          ls -la ./build/installers/linux-unpacked
          mkdir ./gpg
          echo "${{ secrets.GPG_PUB_KEY }}" | base64 -d > ./gpg/pub.key
          echo "${{ secrets.GPG_SECRET_KEY }}" | base64 -d > ./gpg/secret.key
          echo "${{ secrets.GPG_PASSPHRASE_KEY }}" | base64 -d > ./gpg/passphrase
          echo "${{ secrets.ID_RSA }}" | base64 -d > ./gpg/id_rsa

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Upload PPA
        run: |
          ./scripts/build_ppa.sh "${{ github.event.inputs.rev }}"
